knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
rm(list=ls())
library(haven)
install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
install.packages("maptools")
rm(list=ls())
library(haven)
install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
install.packages("SpatialEpi")
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files.zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(utilsIPEA)
install.packages("utilsIPEA")
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(utilsIPEA)
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
install.packages("raster")
library(leaflet)
install.packages("leaflet")
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
library(leaflet)
library(dplyr)
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
getwd()
# notice the parameters use in the chunk!!
#ohMap <- readOGR("ohio_map.shp",stringsAsFactors=F)
ohio_map <- readOGR(dsn="/Users/david/Desktop/Dave/school/Spatial Epi/HW 2/HW 2_data", layer = "ohio_map")
ohio_map <- readOGR(dsn=".", layer="ohio_map")
ohio_map <- readOGR(dsn="~/Ohio shape files", layer="ohio_map")
getwd()
ohio_map <- readOGR(dsn="C:/Users/dcoomes/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files", layer="ohio_map")
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
ohio_map2 <- readShapePoly(fn="ohio_map")
ohio_map2 <- readShapePoly(dsn="C:/Users/dcoomes/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files",
fn="ohio_map")
ohio_map$fips <- as.numeric(as.character(ohio_map$CNTYIDFP00))
ohio_map <- merge(ohio_map,ohio_data,by="fips")
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
ohio_map <- merge(ohio_map,ohio_canc,by="fips")
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
install.packages("spdep")
library(spdep)
install.packages("deldir")
library(spdep)
library(SpatialEpi)
install.packages("SpatialEpi")
library(SpatialEpi)
library(sp)
library(SpatialEpi)
update.packages(checkBuilt = TRUE)
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
#library(spdep)
library(SpatialEpi)
install.packages("SpatialEpi")
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
#library(spdep)
library(SpatialEpi)
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
ohio_map <- readOGR(dsn="C:/Users/dcoomes/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files", layer="ohio_map")
ohio_map <- readOGR(dsn="/Users/david/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files", layer="ohio_map")
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
ohio_map$fips <- as.numeric(as.character(ohio_map$CNTYIDFP00))
ohio_map <- merge(ohio_map,ohio_canc,by="fips")
#for laptop
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
dev.off()
#for laptop
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
dev.off()
#for laptop
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
dev.off()
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
dev.off()
#for laptop
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
dev.off()
num_bins <- 8
plotting_color_palette <- rev(brewer.pal(8, "RdBu"))
library(RColorBrewer)
plotting_color_palette <- rev(brewer.pal(8, "RdBu"))
#for laptop
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
#Not sure what this is doing - it doesn't seem to do much
dev.off()
num_bins <- 8
# choose a color palette
plotting_color_palette <- rev(brewer.pal(8, "RdBu"))
# set breakpoints for plotting
quants <- round(quantile(ohio_map@data$Obs, seq(0, 1, length.out = num_bins)),2)
ohio_map@data$obs_cut <- cut(ohio_map@data$Obs, breaks = c(quants, Inf), include.lowest = TRUE, right = FALSE)   # I modified the breaks
#for laptop
setwd("/Users/david/Documents/GitHub/Spatial_epi/HW 2")
pdf("ohio_map_spplot_default.pdf", # name of file you want to save
width = 8, # width of plot
height = 8) # height of plot
spplot(ohio_map, c("Obs"))
#Not sure what this is doing - it doesn't seem to do much
dev.off()
num_bins <- 8
# choose a color palette
plotting_color_palette <- rev(brewer.pal(8, "RdBu"))
# set breakpoints for plotting
quants <- round(quantile(ohio_map@data$Obs, seq(0, 1, length.out = num_bins)),2)
ohio_map@data$obs_cut <- cut(ohio_map@data$Obs, breaks = c(quants, Inf), include.lowest = TRUE, right = FALSE)   # I modified the breaks
# start graphical device
pdf("ohio_map_spplot_pretty.pdf", width = 8, height = 8)
# make the pretty plot
spplot(ohio_map["obs_cut"],
colorkey = list(height = 1,
labels = list(at = seq(0.5, length(quants) -0.5),
labels = quants)),
col.regions = colorRampPalette(plotting_color_palette)(length(quants)))
# close graphical device
dev.off()
ohio_df <- tidy(ohio_map)
$tidy
?tidy
??tidy
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
#library(spdep)
library(SpatialEpi)
library(SpatialEpi, dep=TRUE)
library(SpatialEpi)
install.packages("SpatialEpi", dep=TRUE)
library(SpatialEpi)
install.packages("deldir", dep=TRUE)
