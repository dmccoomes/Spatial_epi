download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(utilsIPEA)
install.packages("utilsIPEA")
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(utilsIPEA)
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
install.packages("raster")
library(leaflet)
install.packages("leaflet")
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
library(leaflet)
library(dplyr)
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
getwd()
# notice the parameters use in the chunk!!
#ohMap <- readOGR("ohio_map.shp",stringsAsFactors=F)
ohio_map <- readOGR(dsn="/Users/david/Desktop/Dave/school/Spatial Epi/HW 2/HW 2_data", layer = "ohio_map")
ohio_map <- readOGR(dsn=".", layer="ohio_map")
ohio_map <- readOGR(dsn="~/Ohio shape files", layer="ohio_map")
getwd()
ohio_map <- readOGR(dsn="C:/Users/dcoomes/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files", layer="ohio_map")
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
ohio_map2 <- readShapePoly(fn="ohio_map")
ohio_map2 <- readShapePoly(dsn="C:/Users/dcoomes/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files",
fn="ohio_map")
ohio_map$fips <- as.numeric(as.character(ohio_map$CNTYIDFP00))
ohio_map <- merge(ohio_map,ohio_data,by="fips")
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
ohio_map <- merge(ohio_map,ohio_canc,by="fips")
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
install.packages("raster")
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
library(leaflet)
install.packages("leaflet")
rm(list=ls())
library(haven)
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
library(leaflet)
library(dplyr)
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/ohio_2019_version.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#data
#Obs= observed deaths
#Exp = expected deaths
zip_ohmap_SHP = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%202/Ohio%20shape%20files%20(2).zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
# notice the parameters use in the chunk!!
#ohMap <- readOGR("ohio_map.shp",stringsAsFactors=F)
ohio_map <- readOGR(dsn="/Users/david/Desktop/Dave/school/Spatial Epi/HW 2/HW 2_data", layer = "ohio_map")
ohio_map <- readOGR(dsn="C:/Users/dcoomes/Documents/GitHub/Spatial_epi/HW 2/Ohio shape files", layer="ohio_map")
#creating SMRs
ohio_canc$smr <- ohio_canc$Obs/ohio_canc$Exp
ohio_map$fips <- as.numeric(as.character(ohio_map$CNTYIDFP00))
ohio_map <- merge(ohio_map,ohio_canc,by="fips")
ohio_df <- tidy(ohio_map)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE)
ohio_df <- tidy(ohio_map)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = pbs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direciton=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = pbs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
#set breakpoints for plotting
quants <- round(quantile(ohio_map@data$Obs, seq(0,1,length.out=num_bins)),2)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$Obs, seq(0,1,length.out=num_bins)),2)
ohio_map@data$obs_cut <- cut(ohio_map@data$Obs, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$Obs, seq(0,1,length.out=num_bins)),2)
ohio_map@data$obs_cut <- cut(ohio_map@data$Obs, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$Obs, seq(0,1,length.out=num_bins)),2)
ohio_map@data$obs_cut <- cut(ohio_map@data$Obs, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
base_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#save the map
ggsave("ohio_map_ggplot.pdf", width=8, height=8)
base_map
observed_ct_map_1 <- observed_ct_map %>%
addPolygons(data=layerContrib,
weight=1,
opacity= 1,
fillOpacity = 0.7,
fillColor = ~palettFun(AVE_Amount))
observed_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
observed_ct_map_1 <- observed_ct_map %>%
addPolygons(data=layerContrib,
weight=1,
opacity= 1,
fillOpacity = 0.7,
fillColor = ~palettFun(AVE_Amount))
observed_ct_map_1 <- observed_ct_map %>%
addPolygons(data=ohio_map,
weight=1,
opacity= 1,
fillOpacity = 0.7,
fillColor = ~palettFun(AVE_Amount))
observed_ct_map_1 <- observed_ct_map %>%
addPolygons(data=ohio_map,
weight=1,
opacity= 1,
fillOpacity = 0.7,
fillColor = ~paletteFun(AVE_Amount))
observed_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
border='black' +
coord_equal()
observed_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = obs_cut)) +
scale_fill_brewer("Deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
plot(observed_ct_map,
border='black',
lwd=0.1)
plot(observed_ct_map,
border='black',
lwd=1)
plot(observed_ct_map,
border='blue',
lwd=1)
View(ohio_map)
View(ohio_canc)
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$Exp, seq(0,1,length.out=num_bins)),2)
ohio_map@data$exp_cut <- cut(ohio_map@data$Exp, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut)) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#save the map
ggsave("ohio_map_exp_ggplot.pdf", width=8, height=8)
plot(expected_ct_map,
border='blue',
lwd=1)
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut, border='black')) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
plot(expected_ct_map,
border='blue',
lwd=1)
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut)) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line='black',
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut)) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line=element_line,
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut)) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line=element_line(color='black'),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
plot(expected_ct_map,
border='blue',
lwd=1)
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$Exp, seq(0,1,length.out=num_bins)),2)
ohio_map@data$exp_cut <- cut(ohio_map@data$Exp, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut)) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#save the map
ggsave("ohio_map_exp_ggplot.pdf", width=8, height=8)
plot(expected_ct_map,
border='blue',
lwd=1)
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$smr, seq(0,1,length.out=num_bins)),2)
ohio_map@data$smr_cut <- cut(ohio_map@data$Exp, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
smr_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = smr_cut)) +
scale_fill_brewer("SMR", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#save the map
ggsave("ohio_map_smr_ggplot.pdf", width=8, height=8)
plot(smr_ct_map,
border='blue',
lwd=1)
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$smr, seq(0,1,length.out=num_bins)),2)
ohio_map@data$smr_cut <- cut(ohio_map@data$smr, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
smr_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = smr_cut)) +
scale_fill_brewer("SMR", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#save the map
ggsave("ohio_map_smr_ggplot.pdf", width=8, height=8)
plot(smr_ct_map,
border='blue',
lwd=1)
#set breakpoints for plotting
num_bins <- 8
quants <- round(quantile(ohio_map@data$Exp, seq(0,1,length.out=num_bins)),2)
ohio_map@data$exp_cut <- cut(ohio_map@data$Exp, breaks=c(quants, Inf), include.lowest=TRUE, right=FALSE)
ohio_df <- tidy(ohio_map)
ohio_map$polyID <- sapply(slot(ohio_map, "polygons"), function(x) slot(x, "ID"))
ohio_df <- merge(ohio_df, ohio_map, by.x="id", by.y="polyID")
expected_ct_map <- ggplot() +
geom_polygon(
data=ohio_df,
aes(x=long, y=lat, group=group,
fill = exp_cut)) +
scale_fill_brewer("Expected deaths", palette="RdBu", direction=-1) +
theme(line=element_blank(),
axis.text=element_blank(),
axis.title=element_blank()) +
coord_equal()
#save the map
ggsave("ohio_map_exp_ggplot.pdf", width=8, height=8)
plot(expected_ct_map,
border='blue',
lwd=1)
