knitr::opts_chunk$set(echo = TRUE)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r=inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
#Having trouble installing INLA on pc in office
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r=inla-download.org/R/stable"),
dep=TRUE)
}
install.packages("installr")
library(installr)
updateR()
knitr::opts_chunk$set(echo = TRUE)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r=inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
#Having trouble installing INLA on pc in office
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r=inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r-inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
if (!require(haven)) install.packages("haven")
if (!require(haven)) install.packages("rgdal")
if (!require(haven)) install.packages("maptools")
if (!require(haven)) install.packages("sp")
if (!require(haven)) install.packages("spdep")
if (!require(haven)) install.packages("SpatialEpi")
if (!require(haven)) install.packages("RColorBrewer")
if (!require(haven)) install.packages("ggplot2")
if (!require(haven)) install.packages("maps")
if (!require(haven)) install.packages("broom")
if (!require(haven)) install.packages("raster")
if (!require(haven)) install.packages("leaflet")
if (!require(haven)) install.packages("dplyr")
if (!require(haven)) install.packages("tidyverse")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
if (!require(haven)) install.packages("haven")
library(INLA)
library(rgdal)
if (!require(haven)) install.packages("rgdal")
if (!require(haven)) install.packages("haven")
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r-inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
if (!require(haven)) install.packages("haven")
if (!require(haven)) install.packages("rgdal")
if (!require(haven)) install.packages("maptools")
if (!require(haven)) install.packages("sp")
if (!require(haven)) install.packages("spdep")
if (!require(haven)) install.packages("SpatialEpi")
if (!require(haven)) install.packages("RColorBrewer")
if (!require(haven)) install.packages("ggplot2")
if (!require(haven)) install.packages("maps")
if (!require(haven)) install.packages("broom")
if (!require(haven)) install.packages("raster")
if (!require(haven)) install.packages("leaflet")
if (!require(haven)) install.packages("dplyr")
if (!require(haven)) install.packages("tidyverse")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
#Having trouble installing INLA on pc in office
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r-inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
if (!require(haven)) install.packages("haven")
if (!require(rgdal)) install.packages("rgdal")
if (!require(maptools)) install.packages("maptools")
if (!require(sp)) install.packages("sp")
if (!require(spdep)) install.packages("spdep")
if (!require(SpatialEpi)) install.packages("SpatialEpi")
if (!require(RColorBrewer)) install.packages("RColorBrewer")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(maps)) install.packages("maps")
if (!require(broom)) install.packages("broom")
if (!require(raster)) install.packages("raster")
if (!require(leaflet)) install.packages("leaflet")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyverse)) install.packages("tidyverse")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
#Having trouble installing INLA on pc in office
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
library(leaflet)
library(dplyr)
library(tidyverse)
library(SUMMER)
#Cancer data
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/ohio_data_ascending_fips.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#Map data
zip_oh_map <- "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/Map%20data.zip"
library(utils)
temp=tempfile()
download.file(zip_ohmap_SHP, temp)
#Cancer data
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/ohio_data_ascending_fips.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#Map data
zip_oh_map <- "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/Map%20data.zip"
library(utils)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
ohMap <- readOGR("ohio_map.shp",stringsAsFactors=F)
(maps=list.files(pattern = 'shp'))
#Cancer data
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/ohio_data_ascending_fips.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#Map data
zip_oh_map <- "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/Map%20data.zip"
library(utils)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
ohMap <- readOGR("ohio_map.shp",stringsAsFactors=F)
(maps=list.files(pattern = 'shp'))
ohmap <- readOGR("zip_oh_map",stringsAsFactors=F)
ohmap <- readOGR(url(zip_oh_map),stringsAsFactors=F)
download.file(url(zip_oh_map))
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
if (!isTRUE(requireNamespace("INLA", quietly = TRUE))) {
install.packages("INLA", repos = c(getOption("repos"),
INLA = "https://inla.r-inla-download.org/R/stable"),
dep=TRUE)
}
if (!require(SUMMER)) install.packages("SUMMER", repos = "http://cran.us.r-project.org")
if (!require(foreign)) install.packages("foreign", repos = "http://cran.us.r-project.org")
if (!require(haven)) install.packages("haven")
if (!require(rgdal)) install.packages("rgdal")
if (!require(maptools)) install.packages("maptools")
if (!require(sp)) install.packages("sp")
if (!require(spdep)) install.packages("spdep")
if (!require(SpatialEpi)) install.packages("SpatialEpi")
if (!require(RColorBrewer)) install.packages("RColorBrewer")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(maps)) install.packages("maps")
if (!require(broom)) install.packages("broom")
if (!require(raster)) install.packages("raster")
if (!require(leaflet)) install.packages("leaflet")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyverse)) install.packages("tidyverse")
#Can add more here if needed
rm(list=ls())
library(foreign)
library(haven)
#Having trouble installing INLA on pc in office
#install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(rgdal)
library(maptools)
library(sp)
library(spdep)
library(SpatialEpi)
library(RColorBrewer)
library(ggplot2)
library(maps)
library(broom)
library(raster)
library(leaflet)
library(dplyr)
library(tidyverse)
library(SUMMER)
#Cancer data
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/ohio_data_ascending_fips.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#Map data
zip_oh_map <- "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/Map%20data.zip"
library(utils)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
ohmap <- readOGR(url(zip_oh_map),stringsAsFactors=F)
(maps=list.files(pattern = 'shp'))
getwd()
library(utils)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
(maps=list.files(pattern = 'shp'))
library(utils)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
#Cancer data
link = "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Data/ohio_data_ascending_fips.txt"
ohio_canc <- read.table(url(link), header=TRUE)
#Map data
zip_oh_map <- "https://github.com/dmccoomes/Spatial_epi/raw/master/HW%203/Map%20data.zip"
library(utils)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
(maps=list.files(pattern = 'shp'))
ohmap <- readOGR(url(zip_oh_map),stringsAsFactors=F)
temp=tempfile()
download.file(zip_oh_map, temp)
unzip(temp)
(maps=list.files(pattern = 'shp'))
(maps=list.files(pattern = '.shp'))
ohmap <- readOGR(layer="ohio_map")
ohmap <- readOGR(dsn=".", layer="ohio_map")
ohmap <- readOGR(dsn=".", layer="ohio_map")
ohmap <- readOGR(dsn="~\Data\Map data", layer="ohio_map")
ohmap <- readOGR(dsn="\Data\Map data", layer="ohio_map")
ohmap <- readOGR(dsn="C:\Users\dcoomes\Documents\GitHub\Spatial_epi\HW 3\Data\Map data", layer="ohio_map")
ohmap <- readOGR(dsn="C:\\Users\dcoomes\Documents\GitHub\Spatial_epi\HW 3\Data\Map data", layer="ohio_map")
ohmap <- readOGR(dsn="C:\Users\\dcoomes\\Documents\\GitHub\\Spatial_epi\\HW 3\\Data\\Map data", layer="ohio_map")
ohmap <- readOGR(dsn="C:\\Users\\dcoomes\\Documents\\GitHub\\Spatial_epi\\HW 3\\Data\\Map data", layer="ohio_map")
pcprec <- list(theta = list(prior = "pc.prec",
param = c(1, 0.05)))
ohio.fit1 <- inla(Counts ~ 1 + f(Region, model="bym2", graph="ohio map.graph", scale.model=T, constr=T,
hyper=list(phi=list(prior="pc", param=c(0.5, 0.5), initial=1),
prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5))))
nb.map <- poly2nb(ohmap)
nb2INLA("oh_graph", nb.map)
pcprec <- list(theta = list(prior = "pc.prec",
param = c(1, 0.05)))
ohio.fit1 <- inla(Counts ~ 1 + f(Region, model="bym2", graph="ohio_graph", scale.model=T, constr=T,
hyper=list(phi=list(prior="pc", param=c(0.5, 0.5), initial=1),
prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5))))
View(ohio_graph)
pcprec <- list(theta = list(prior = "pc.prec",
param = c(1, 0.05)))
ohio.fit1 <- inla(Counts ~ 1 + f(Region, model="bym2", graph="oh_graph", scale.model=T,                         constr=T, hyper=list(phi=list(prior="pc", param=c(0.5, 0.5), initial=1),
prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5))))
View(oh_graph)
nb.map <- poly2nb(ohmap)
nb2INLA("oh_graph", nb.map)
summary(oh_graph)
summary(ohio_map)
summary(nb.map)
summary(ohmap)
pcprec <- list(theta = list(prior = "pc.prec",
param = c(1, 0.05)))
ohio.fit1 <- inla(Counts ~ 1 + f(COUNTYFP00, model="bym2", graph="oh_graph", scale.model=T,                         constr=T, hyper=list(phi=list(prior="pc", param=c(0.5, 0.5), initial=1),
prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5))))
pc.prec <- list(theta = list(prior = "pc.prec",
param = c(1, 0.05)))
ohio.fit1 <- inla(Counts ~ 1 + f(Region, model="bym2", graph="oh_graph", scale.model=T,                           constr=T, hyper=list(phi=list(prior="pc", param=c(0.5, 0.5), initial=1),
prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5))))
formula <- Counts ~ 1 + I(X) +
f(Region, model="bym2", graph="ohio map.graph", scale.model=T, constr=T, hyper=list(phi=list(prior="pc",                param=c(0.5, 0.5), initial=1), prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5)))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=E, control.predictor=list(compute=TRUE))
View(ohio_canc)
formula <- deaths ~ 1 + I(X) +
f(Region, model="bym2", graph="ohio map.graph", scale.model=T, constr=T, hyper=list(phi=list(prior="pc",                param=c(0.5, 0.5), initial=1), prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5)))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=E, control.predictor=list(compute=TRUE))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=county_level_E, control.predictor=list(compute=TRUE))
View(nb.map)
formula <- deaths ~ 1 + I(X) +
f(fips, model="bym2", graph="ohio map.graph", scale.model=T, constr=T, hyper=list(phi=list(prior="pc",                param=c(0.5, 0.5), initial=1), prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5)))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=county_level_E, control.predictor=list(compute=TRUE))
View(oh_graph)
View(nb.map)
formula <- deaths ~ 1 + I(X) +
f(fips, model="bym2", graph="oh_graph", scale.model=T, constr=T, hyper=list(phi=list(prior="pc",                        param=c(0.5, 0.5), initial=1), prec=list(prior="pc.prec", param=c(0.3,0.01), initial=5)))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=county_level_E, control.predictor=list(compute=TRUE))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=E, control.predictor=list(compute=TRUE))
ohio.fit1 <- inla(formula, data=ohio_canc, family="poisson", E=county_level_E, control.predictor=list(compute=TRUE))
summary(ohmap)
ohmap$COUNTYFP00
oh_canc$fips
ohio_canc$fips
ohmap$COUNTYFP00
summary(ohmap)
summary(ohio_canc)
View(ohio_canc)
